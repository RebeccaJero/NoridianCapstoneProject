@model TrackTaskItemsDb.Models.TaskItem
@{
   
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/css/bootstrap.min.css" />
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.13/js/bootstrap-multiselect.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.13/css/bootstrap-multiselect.css">
<link href='https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/ui-lightness/jquery-ui.css'
      rel='stylesheet'>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js">
</script>
<script src='@Url.Content("~/Scripts/jquery.validate.js")' type='text/javascript'></script>

<script src="~/Scripts/CustomValidators.js"></script>

<style>
    .error {
        color: #F00;
        background-color: #FFF;
    }
</style>

<h2 class="container">Create Task Item</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TaskItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, ViewBag.Status as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompletedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompletedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompletedDate, "", new { @class = "text-danger", })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Start Quarter", htmlAttributes: new { @class = "control-label col-md-2", })
            <div class="col-md-10">
                <select class="form-control col-md-10" id="StartQuarter" name="StartQuarter">
                    @foreach (var item in ViewBag.StartQuarters.Items) //as SelectList)
                    {
                        <option value="@item.StartDate" quarterId="@item.Id">@item.Quarter_Desc</option>


                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("End Quarter", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control col-md-10" id="EndQuarter" name="EndQuarter">
                    @foreach (var item in ViewBag.StartQuarters.Items)
                    {
                        <option value="@item.StartDate" quarterId="@item.Id">@item.Quarter_Desc</option>
                    }
                </select>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.StrategicPillarId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StrategicPillarId, ViewBag.pillars as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StrategicPillarId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Mandate Required", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="IsMandate">
                    <label>Yes</label>
                    <input name="IsMandate" id="MandateYes" type="radio" value="true" />
                    <label>No</label>
                    <input name="IsMandate" id="MandateNo" type="radio" value="false" checked="checked" />
                </div>
            </div>

        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" id="mand">
            @Html.LabelFor(model => model.MandateComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MandateComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MandateComment, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.Label("Department", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("Department", ViewBag.Department as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control", id = "Department" })
        </div>

        <div>
            @Html.Label("Impacted Department", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("Impacted Department", ViewBag.Department as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control", id = "ImpactedDep", multiple = "multiple" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Action, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Action, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Outcome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Outcome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Outcome, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IT_Project_Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IT_Project_Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IT_Project_Number, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Budget Impact", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OperationalBudgetImplications, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default btn-next" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>




